package promo

import (
	"fmt"
	"log"
	"strconv"
	"strings"

	"bot/common"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// AdminPromoHandler –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
type AdminPromoHandler struct {
	service *PromoService
}

// NewAdminPromoHandler —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∞
func NewAdminPromoHandler() (*AdminPromoHandler, error) {
	service, err := NewPromoService()
	if err != nil {
		return nil, fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: %v", err)
	}

	return &AdminPromoHandler{service: service}, nil
}

// HandlePromoSetCommand –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /promoset
func (h *AdminPromoHandler) HandlePromoSetCommand(chatID int64, userID int64) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
	if !IsAdmin(userID) {
		return h.sendMessage(chatID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
	}

	// –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
	keyboard := h.createAmountKeyboard()

	text := "üéÅ <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n\n" +
		"–ù–∞ —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?\n\n" +
		"–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:"

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"
	msg.ReplyMarkup = keyboard

	_, err := common.GlobalBot.Send(msg)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	return nil
}

// HandlePromoSetCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback –æ—Ç –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã
func (h *AdminPromoHandler) HandlePromoSetCallback(chatID int64, userID int64, callbackData string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
	if !IsAdmin(userID) {
		return h.sendMessage(chatID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
	}

	// –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—É–º–º—É –∏–∑ callback data
	parts := strings.Split(callbackData, ":")
	if len(parts) != 2 || parts[0] != "promo_amount" {
		return h.sendMessage(chatID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
	}

	amountStr := parts[1]
	amount, err := strconv.ParseFloat(amountStr, 64)
	if err != nil {
		return h.sendMessage(chatID, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞.")
	}

	// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
	promo, err := h.service.CreatePromoCode(amount, userID)
	if err != nil {
		log.Printf("PROMO_ADMIN: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: %v", err)
		return h.sendMessage(chatID, "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
	text := fmt.Sprintf("‚úÖ <b>–ü—Ä–æ–º–æ–∫–æ–¥ —Å–æ–∑–¥–∞–Ω!</b>\n\n"+
		"üéÅ <b>–ö–æ–¥:</b> <code>%s</code>\n"+
		"üí∞ <b>–°—É–º–º–∞:</b> %.2f‚ÇΩ\n"+
		"‚è∞ <b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> %s\n"+
		"üë• <b>–ú–∞–∫—Å–∏–º—É–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π:</b> %d\n\n"+
		"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –∫–æ–º–∞–Ω–¥–æ–π:\n"+
		"<code>/promo %s</code>",
		promo.Code,
		promo.Amount,
		promo.ExpiresAt.Format("02.01.2006 15:04"),
		promo.MaxUses,
		promo.Code)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥", fmt.Sprintf("copy_promo:%s", promo.Code)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤", "promo_stats"),
		),
	)
	msg.ReplyMarkup = keyboard

	_, err = common.GlobalBot.Send(msg)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: %v", err)
	}

	return nil
}

// HandlePromoStatsCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
func (h *AdminPromoHandler) HandlePromoStatsCallback(chatID int64, userID int64) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
	if !IsAdmin(userID) {
		return h.sendMessage(chatID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
	}

	// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	stats, err := h.service.GetPromoStats(userID)
	if err != nil {
		log.Printf("PROMO_ADMIN: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: %v", err)
		return h.sendMessage(chatID, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
	}

	// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	text := fmt.Sprintf("üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤</b>\n\n"+
		"üéÅ <b>–í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ:</b> %d\n"+
		"‚úÖ <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:</b> %d\n"+
		"üí∞ <b>–û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–¥–∞–Ω–∞:</b> %.2f‚ÇΩ\n"+
		"üìà <b>–ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b> %.1f%%",
		stats["total_created"],
		stats["total_used"],
		stats["total_amount"],
		stats["usage_rate"])

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üéÅ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥", "create_promo"),
		),
	)
	msg.ReplyMarkup = keyboard

	_, err = common.GlobalBot.Send(msg)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: %v", err)
	}

	return nil
}

// HandleCopyPromoCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
func (h *AdminPromoHandler) HandleCopyPromoCallback(chatID int64, userID int64, callbackData string) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
	if !IsAdmin(userID) {
		return h.sendMessage(chatID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
	}

	// –ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –∏–∑ callback data
	parts := strings.Split(callbackData, ":")
	if len(parts) != 2 || parts[0] != "copy_promo" {
		return h.sendMessage(chatID, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
	}

	promoCode := parts[1]

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
	text := fmt.Sprintf("üìã <b>–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n\n<code>%s</code>", promoCode)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	_, err := common.GlobalBot.Send(msg)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞: %v", err)
	}

	return nil
}

// createAmountKeyboard —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
func (h *AdminPromoHandler) createAmountKeyboard() tgbotapi.InlineKeyboardMarkup {
	var rows [][]tgbotapi.InlineKeyboardButton

	// –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Å—É–º–º—ã
	for _, amount := range PredefinedAmounts {
		button := tgbotapi.NewInlineKeyboardButtonData(
			fmt.Sprintf("üí∞ %.0f‚ÇΩ", amount),
			fmt.Sprintf("promo_amount:%.0f", amount),
		)
		rows = append(rows, []tgbotapi.InlineKeyboardButton{button})
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
	customButton := tgbotapi.NewInlineKeyboardButtonData(
		"üîß –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞",
		"promo_custom",
	)
	rows = append(rows, []tgbotapi.InlineKeyboardButton{customButton})

	return tgbotapi.NewInlineKeyboardMarkup(rows...)
}

// HandleCustomAmountCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
func (h *AdminPromoHandler) HandleCustomAmountCallback(chatID int64, userID int64) error {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
	if !IsAdmin(userID) {
		return h.sendMessage(chatID, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
	}

	text := "üîß <b>–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞</b>\n\n" +
		"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ —Ä—É–±–ª—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1500):"

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	_, err := common.GlobalBot.Send(msg)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}

	// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	// –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã

	return nil
}

// sendMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
func (h *AdminPromoHandler) sendMessage(chatID int64, text string) error {
	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "HTML"

	_, err := common.GlobalBot.Send(msg)
	return err
}
