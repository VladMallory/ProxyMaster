package telegram_bot

import (
	"log"

	"bot/handlers"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// Bot –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
type Bot struct {
	API     *tgbotapi.BotAPI
	Updates tgbotapi.UpdatesChannel
}

// NewBot —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
func NewBot(token string) (*Bot, error) {
	log.Printf("TELEGRAM_BOT: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º %s", token)

	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		return nil, err
	}

	bot.Debug = false
	log.Printf("TELEGRAM_BOT: –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ @%s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)
	log.Printf("TELEGRAM_BOT: –ó–∞–ø—É—â–µ–Ω –∫–∞–Ω–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π Telegram")

	return &Bot{
		API:     bot,
		Updates: updates,
	}, nil
}

// Start –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
func (b *Bot) Start() {
	log.Printf("TELEGRAM_BOT: –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")

	for update := range b.Updates {
		if update.Message != nil {
			// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
			if update.Message.SuccessfulPayment != nil {
				log.Printf("TELEGRAM_BOT: –ü–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TelegramID=%d", update.Message.From.ID)
				handlers.HandleSuccessfulPayment(b.API, update.Message)
			} else {
				log.Printf("TELEGRAM_BOT: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TelegramID=%d, —Ç–µ–∫—Å—Ç='%s'", update.Message.From.ID, update.Message.Text)
				handlers.HandleMessage(b.API, update.Message)
			}
		}

		if update.CallbackQuery != nil {
			log.Printf("TELEGRAM_BOT: –ü–æ–ª—É—á–µ–Ω callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TelegramID=%d, –¥–∞–Ω–Ω—ã–µ='%s'", update.CallbackQuery.From.ID, update.CallbackQuery.Data)
			handlers.HandleCallback(b.API, update.CallbackQuery)
		}
	}
}

// SetBotCommands —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é
func SetBotCommands(bot *tgbotapi.BotAPI) error {
	log.Printf("TELEGRAM_BOT: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞")

	commands := []tgbotapi.BotCommand{
		{
			Command:     "start",
			Description: "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
		},
		{
			Command:     "balance",
			Description: "üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ",
		},
	}

	config := tgbotapi.NewSetMyCommands(commands...)
	_, err := bot.Request(config)
	if err != nil {
		log.Printf("TELEGRAM_BOT: –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥: %v", err)
		return err
	}

	log.Printf("TELEGRAM_BOT: –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
	return nil
}
