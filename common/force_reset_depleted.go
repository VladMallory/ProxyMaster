package common

import (
	"encoding/json"
	"fmt"
	"log"
	"strings"
	"time"
)

// ForceResetDepletedStatus –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–∏—Å—á–µ—Ä–ø–∞–Ω–æ" –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ –¥–≤—É—Ö—Ñ–∞–∑–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥, —á—Ç–æ –∏ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–∫—Ä–∏–ø—Ç–µ
func ForceResetDepletedStatus(sessionCookie string, telegramID int64) error {
	log.Printf("FORCE_RESET: –ù–∞—á–∞–ª–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è '–∏—Å—á–µ—Ä–ø–∞–Ω–æ' –¥–ª—è TelegramID=%d", telegramID)

	// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π inbound
	inbound, err := GetInbound(sessionCookie)
	if err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è inbound: %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è inbound: %v", err)
	}

	var settings Settings
	if err := json.Unmarshal([]byte(inbound.Settings), &settings); err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings: %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings: %v", err)
	}

	// –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ TelegramID
	telegramIDStr := fmt.Sprintf("%d", telegramID)
	clientIndex := -1
	var targetClient *Client

	for i, client := range settings.Clients {
		if strings.HasPrefix(client.Email, telegramIDStr+"_") ||
			strings.HasPrefix(client.Email, telegramIDStr+" ") ||
			client.Email == telegramIDStr {
			clientIndex = i
			targetClient = &settings.Clients[i]
			break
		}
	}

	if clientIndex == -1 {
		log.Printf("FORCE_RESET: –ö–ª–∏–µ–Ω—Ç —Å TelegramID=%d –Ω–µ –Ω–∞–π–¥–µ–Ω", telegramID)
		return fmt.Errorf("–∫–ª–∏–µ–Ω—Ç —Å TelegramID=%d –Ω–µ –Ω–∞–π–¥–µ–Ω", telegramID)
	}

	log.Printf("FORCE_RESET: –ù–∞–π–¥–µ–Ω –∫–ª–∏–µ–Ω—Ç: Email=%s, UUID=%s, Enable=%t",
		targetClient.Email, targetClient.ID, targetClient.Enable)

	originalEmail := targetClient.Email
	originalExpiry := targetClient.ExpiryTime
	originalEnable := targetClient.Enable

	// ==================== –§–ê–ó–ê A ====================
	log.Printf("FORCE_RESET: üÖ∞Ô∏è  –§–ê–ó–ê A - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ depleted/exhausted=TRUE –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ")

	trueValue := true
	toggleEmail := originalEmail + "-reset"

	settings.Clients[clientIndex].Depleted = &trueValue
	settings.Clients[clientIndex].Exhausted = &trueValue
	settings.Clients[clientIndex].Enable = false
	settings.Clients[clientIndex].Email = toggleEmail
	settings.Clients[clientIndex].UpdatedAt = time.Now().UnixMilli()

	// –û–±–Ω–æ–≤–ª—è–µ–º inbound (–§–ê–ó–ê A)
	settingsJSON, err := json.Marshal(settings)
	if err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings (–§–ê–ó–ê A): %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings (–§–ê–ó–ê A): %v", err)
	}
	inbound.Settings = string(settingsJSON)

	if err := updateInbound(sessionCookie, *inbound); err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è inbound (–§–ê–ó–ê A): %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è inbound (–§–ê–ó–ê A): %v", err)
	}

	log.Printf("FORCE_RESET: –§–ê–ó–ê A –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–∞—É–∑–∞ 1000–º—Å...")
	time.Sleep(1000 * time.Millisecond)

	// ==================== –§–ê–ó–ê B ====================
	log.Printf("FORCE_RESET: üÖ±Ô∏è  –§–ê–ó–ê B - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ depleted/exhausted=FALSE –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ")

	falseValue := false

	settings.Clients[clientIndex].Depleted = &falseValue
	settings.Clients[clientIndex].Exhausted = &falseValue
	settings.Clients[clientIndex].Enable = originalEnable
	settings.Clients[clientIndex].Email = originalEmail
	settings.Clients[clientIndex].ExpiryTime = originalExpiry
	settings.Clients[clientIndex].UpdatedAt = time.Now().UnixMilli()

	// –û–±–Ω–æ–≤–ª—è–µ–º inbound (–§–ê–ó–ê B)
	settingsJSON, err = json.Marshal(settings)
	if err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings (–§–ê–ó–ê B): %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ settings (–§–ê–ó–ê B): %v", err)
	}
	inbound.Settings = string(settingsJSON)

	if err := updateInbound(sessionCookie, *inbound); err != nil {
		log.Printf("FORCE_RESET: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è inbound (–§–ê–ó–ê B): %v", err)
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è inbound (–§–ê–ó–ê B): %v", err)
	}

	log.Printf("FORCE_RESET: ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è '–∏—Å—á–µ—Ä–ø–∞–Ω–æ' –∑–∞–≤–µ—Ä—à—ë–Ω –¥–ª—è TelegramID=%d", telegramID)
	log.Printf("FORCE_RESET: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: Email=%s, Enable=%t, Depleted=false, Exhausted=false",
		originalEmail, originalEnable)

	return nil
}
