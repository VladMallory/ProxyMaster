package telegram_bot

import (
	"fmt"
	"log"

	"bot/common"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// SupportConfig –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
type SupportConfig struct {
	SupportText   string
	SupportURL    string
	SupportButton string
}

// DefaultSupportConfig –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
func DefaultSupportConfig() SupportConfig {
	return SupportConfig{
		SupportText:   "–ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ->",
		SupportURL:    common.SUPPORT_LINK,
		SupportButton: "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
	}
}

// AddSupportToMessage –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
func AddSupportToMessage(msg tgbotapi.MessageConfig, config SupportConfig) tgbotapi.MessageConfig {
	if msg.ReplyMarkup == nil {
		// –ï—Å–ª–∏ –Ω–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
			),
		)
		msg.ReplyMarkup = &keyboard
	} else {
		// –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
		if msg.ReplyMarkup != nil {
			// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
			newRow := tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
			)
			if keyboard, ok := msg.ReplyMarkup.(*tgbotapi.InlineKeyboardMarkup); ok {
				keyboard.InlineKeyboard = append(keyboard.InlineKeyboard, newRow)
			}
		}
	}
	return msg
}

// AddSupportToEditMessage –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
func AddSupportToEditMessage(msg tgbotapi.EditMessageTextConfig, config SupportConfig) tgbotapi.EditMessageTextConfig {
	if msg.ReplyMarkup == nil {
		// –ï—Å–ª–∏ –Ω–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
			),
		)
		msg.ReplyMarkup = &keyboard
	} else {
		// –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏
		if msg.ReplyMarkup != nil {
			// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
			newRow := tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
			)
			msg.ReplyMarkup.InlineKeyboard = append(msg.ReplyMarkup.InlineKeyboard, newRow)
		}
	}
	return msg
}

// SendSupportMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
func SendSupportMessage(bot *tgbotapi.BotAPI, chatID int64, text string, config SupportConfig) error {
	log.Printf("SEND_SUPPORT_MESSAGE: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è ChatID=%d", chatID)

	// –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
	fullText := fmt.Sprintf("%s\n\n%s", text, config.SupportText)

	msg := tgbotapi.NewMessage(chatID, fullText)
	msg = AddSupportToMessage(msg, config)

	_, err := bot.Send(msg)
	if err != nil {
		log.Printf("SEND_SUPPORT_MESSAGE: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
		return err
	}

	log.Printf("SEND_SUPPORT_MESSAGE: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
	return nil
}

// EditSupportMessage —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
func EditSupportMessage(bot *tgbotapi.BotAPI, chatID int64, messageID int, text string, config SupportConfig) error {
	log.Printf("EDIT_SUPPORT_MESSAGE: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è ChatID=%d, MessageID=%d", chatID, messageID)

	// –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
	fullText := fmt.Sprintf("%s\n\n%s", text, config.SupportText)

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, fullText)
	editMsg = AddSupportToEditMessage(editMsg, config)

	_, err := bot.Send(editMsg)
	if err != nil {
		log.Printf("EDIT_SUPPORT_MESSAGE: –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
		return err
	}

	log.Printf("EDIT_SUPPORT_MESSAGE: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ")
	return nil
}

// CreateSupportKeyboard —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
func CreateSupportKeyboard(config SupportConfig) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
		),
	)
}

// AddSupportToExistingKeyboard –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
func AddSupportToExistingKeyboard(keyboard *tgbotapi.InlineKeyboardMarkup, config SupportConfig) *tgbotapi.InlineKeyboardMarkup {
	if keyboard == nil {
		newKeyboard := CreateSupportKeyboard(config)
		return &newKeyboard
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
	newRow := tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonURL(config.SupportButton, config.SupportURL),
	)
	keyboard.InlineKeyboard = append(keyboard.InlineKeyboard, newRow)
	return keyboard
}
