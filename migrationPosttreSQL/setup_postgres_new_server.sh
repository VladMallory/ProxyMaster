#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –Ω–∞ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è VPN –±–æ—Ç–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./setup_postgres_new_server.sh [DB_PASSWORD]

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log "=== –ù–ê–°–¢–†–û–ô–ö–ê PostgreSQL –ù–ê –ù–û–í–û–ú –°–ï–†–í–ï–†–ï ==="

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DB_NAME="vpn_bot"
DB_USER="vpn_bot_user"
DB_PASSWORD="${1:-$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)}"

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
log "  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
log "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $DB_USER"
log "  –ü–∞—Ä–æ–ª—å: $DB_PASSWORD"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ PostgreSQL
if ! command -v psql &> /dev/null; then
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
    apt update
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL
    apt install -y postgresql postgresql-contrib
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    systemctl start postgresql
    systemctl enable postgresql
    
    success "PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
else
    log "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å PostgreSQL
if ! systemctl is-active --quiet postgresql; then
    log "–ó–∞–ø—É—Å–∫ PostgreSQL..."
    systemctl start postgresql
fi

success "PostgreSQL –∑–∞–ø—É—â–µ–Ω"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥ –∫–∞–∫ postgres –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
run_sql() {
    log "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: $1"
    sudo -u postgres psql -c "$1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∏–∑ —Ñ–∞–π–ª–∞
run_sql_file() {
    log "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è SQL —Ñ–∞–π–ª: $1"
    sudo -u postgres psql -d "$DB_NAME" -f "$1"
}

log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
run_sql "CREATE USER $DB_USER WITH ENCRYPTED PASSWORD '$DB_PASSWORD';" || warning "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

log "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
run_sql "CREATE DATABASE $DB_NAME OWNER $DB_USER;" || warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

log "–í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é..."
run_sql "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"
run_sql "ALTER USER $DB_USER CREATEDB;"

log "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "postgres_schema.sql" ]; then
    run_sql_file "postgres_schema.sql"
    success "–°—Ö–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–∑ postgres_schema.sql"
else
    warning "–§–∞–π–ª postgres_schema.sql –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ö–µ–º—É..."
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ö–µ–º—É
    sudo -u postgres psql -d "$DB_NAME" << EOF
-- –û—Å–Ω–æ–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT UNIQUE NOT NULL,
    username VARCHAR(255),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    balance DECIMAL(10,2) DEFAULT 0.00,
    total_paid DECIMAL(10,2) DEFAULT 0.00,
    configs_count INTEGER DEFAULT 0,
    has_active_config BOOLEAN DEFAULT FALSE,
    client_id VARCHAR(255),
    sub_id VARCHAR(255),
    email VARCHAR(255),
    config_created_at TIMESTAMP,
    expiry_time BIGINT,
    has_used_trial BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
CREATE TABLE IF NOT EXISTS traffic_configs (
    id VARCHAR(50) PRIMARY KEY DEFAULT 'default',
    enabled BOOLEAN DEFAULT TRUE,
    daily_limit_gb INTEGER,
    weekly_limit_gb INTEGER,
    monthly_limit_gb INTEGER,
    limit_gb INTEGER,
    reset_days INTEGER,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- IP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
CREATE TABLE IF NOT EXISTS ip_connections (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT,
    ip_address INET,
    connection_data JSONB,
    timestamp TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY (telegram_id) REFERENCES users(telegram_id) ON DELETE CASCADE
);

-- IP –Ω–∞—Ä—É—à–µ–Ω–∏—è
CREATE TABLE IF NOT EXISTS ip_violations (
    id SERIAL PRIMARY KEY,
    telegram_id BIGINT,
    ip_address INET,
    is_blocked BOOLEAN DEFAULT FALSE,
    violation_count INTEGER DEFAULT 1,
    violation_type VARCHAR(100),
    violation_data JSONB,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY (telegram_id) REFERENCES users(telegram_id) ON DELETE CASCADE
);

-- –ò–Ω–¥–µ–∫—Å—ã
CREATE INDEX IF NOT EXISTS idx_users_telegram_id ON users(telegram_id);
CREATE INDEX IF NOT EXISTS idx_users_created_at ON users(created_at);
CREATE INDEX IF NOT EXISTS idx_users_has_active_config ON users(has_active_config);

-- –í—Å—Ç–∞–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
INSERT INTO traffic_configs (id, enabled, daily_limit_gb, weekly_limit_gb, monthly_limit_gb, limit_gb, reset_days)
VALUES ('default', true, 0, 0, 0, 0, 30)
ON CONFLICT (id) DO NOTHING;
EOF
    success "–ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞"
fi

log "–í—ã–¥–∞—á–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–≤..."
sudo -u postgres psql -d "$DB_NAME" -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USER;"
sudo -u postgres psql -d "$DB_NAME" -c "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USER;"
sudo -u postgres psql -d "$DB_NAME" -c "GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO $DB_USER;"

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π..."

# –û–±–Ω–æ–≤–ª—è–µ–º pg_hba.conf –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
PG_VERSION=$(sudo -u postgres psql -t -c "SELECT version();" | grep -oE '[0-9]+\.[0-9]+' | head -1)
PG_HBA_PATH="/etc/postgresql/$PG_VERSION/main/pg_hba.conf"

if [ -f "$PG_HBA_PATH" ]; then
    log "–û–±–Ω–æ–≤–ª—è–µ–º $PG_HBA_PATH..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if ! grep -q "$DB_USER" "$PG_HBA_PATH"; then
        echo "local   $DB_NAME      $DB_USER                                md5" | sudo tee -a "$PG_HBA_PATH"
        echo "host    $DB_NAME      $DB_USER        127.0.0.1/32            md5" | sudo tee -a "$PG_HBA_PATH"
        echo "host    $DB_NAME      $DB_USER        ::1/128                 md5" | sudo tee -a "$PG_HBA_PATH"
    fi
    
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º PostgreSQL..."
    systemctl reload postgresql
else
    warning "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ pg_hba.conf, –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤—Ä—É—á–Ω—É—é"
fi

log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è..."
export PGPASSWORD="$DB_PASSWORD"
if psql -h localhost -U "$DB_USER" -d "$DB_NAME" -c "SELECT '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!' as status;" > /dev/null 2>&1; then
    success "–¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!"
else
    error "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
    exit 1
fi

log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cat > .env.postgres << EOF
# PostgreSQL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è VPN –±–æ—Ç–∞
export PG_HOST=localhost
export PG_PORT=5432
export PG_USER=$DB_USER
export PG_PASSWORD=$DB_PASSWORD
export PG_DBNAME=$DB_NAME
EOF

success "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .env.postgres"

log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cat > load_env.sh << EOF
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è PostgreSQL
source .env.postgres
echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è PostgreSQL –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
echo "PG_HOST=\$PG_HOST"
echo "PG_PORT=\$PG_PORT"
echo "PG_USER=\$PG_USER"
echo "PG_DBNAME=\$PG_DBNAME"
EOF

chmod +x load_env.sh

log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cat > check_db.sh << EOF
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

source .env.postgres

echo "=== –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ==="
echo "Host: \$PG_HOST"
echo "Port: \$PG_PORT"
echo "User: \$PG_USER"
echo "Database: \$PG_DBNAME"
echo ""

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if PGPASSWORD="\$PG_PASSWORD" psql -h "\$PG_HOST" -U "\$PG_USER" -d "\$PG_DBNAME" -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
    exit 1
fi

echo ""
echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:"
PGPASSWORD="\$PG_PASSWORD" psql -h "\$PG_HOST" -U "\$PG_USER" -d "\$PG_DBNAME" -c "
SELECT 
    schemaname,
    tablename,
    n_tup_ins as inserts,
    n_tup_upd as updates,
    n_tup_del as deletes
FROM pg_stat_user_tables
ORDER BY tablename;
"

echo ""
echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
USER_COUNT=\$(PGPASSWORD="\$PG_PASSWORD" psql -h "\$PG_HOST" -U "\$PG_USER" -d "\$PG_DBNAME" -t -c "SELECT COUNT(*) FROM users;")
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: \$USER_COUNT"

echo ""
echo "–†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
PGPASSWORD="\$PG_PASSWORD" psql -h "\$PG_HOST" -U "\$PG_USER" -d "\$PG_DBNAME" -c "SELECT pg_size_pretty(pg_database_size('$DB_NAME'));"
EOF

chmod +x check_db.sh

success "=== –ù–ê–°–¢–†–û–ô–ö–ê PostgreSQL –ó–ê–í–ï–†–®–ï–ù–ê ==="

echo ""
echo "üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. source .env.postgres              # –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "2. ./check_db.sh                     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
echo "3. go mod tidy                       # –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Go"
echo "4. go run main.go                    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
echo ""
echo "üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê:"
echo "systemctl status postgresql          # –°—Ç–∞—Ç—É—Å PostgreSQL"
echo "psql -h localhost -U $DB_USER -d $DB_NAME  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"
echo ""

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PostgreSQL –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
