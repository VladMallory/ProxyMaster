package handlers

import (
	"fmt"
	"log"

	"bot/common"
	"bot/payments"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// ProcessPaymentCallback –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback –æ–ø–ª–∞—Ç—ã
func ProcessPaymentCallback(bot *tgbotapi.BotAPI, chatID int64, messageID int, user *common.User, days int) {
	log.Printf("PROCESS_PAYMENT_CALLBACK: –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è TelegramID=%d, days=%d", user.TelegramID, days)

	// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
	updatedUser, err := common.GetUserByTelegramID(user.TelegramID)
	if err != nil {
		log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è TelegramID=%d: %v", user.TelegramID, err)
		editMsg := tgbotapi.NewEditMessageText(chatID, messageID, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
		if _, err := bot.Send(editMsg); err != nil {
			log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}
	user = updatedUser
	log.Printf("PROCESS_PAYMENT_CALLBACK: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã: TelegramID=%d, Balance=%.2f, HasActiveConfig=%v", user.TelegramID, user.Balance, user.HasActiveConfig)

	cost := float64(days * common.PRICE_PER_DAY)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
	if user.Balance < cost {
		log.Printf("PROCESS_PAYMENT_CALLBACK: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è TelegramID=%d, Balance=%.2f, Cost=%.2f", user.TelegramID, user.Balance, cost)
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
				tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
			),
		)

		text := fmt.Sprintf("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\n\n"+
			"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: %.2f‚ÇΩ\n"+
			"üí∏ –ù—É–∂–Ω–æ: %.0f‚ÇΩ\n"+
			"üíé –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç: %.2f‚ÇΩ\n\n"+
			"–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è",
			user.Balance, cost, cost-user.Balance)

		log.Printf("PROCESS_PAYMENT_CALLBACK: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è TelegramID=%d: %s", user.TelegramID, text)
		editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
		editMsg.ReplyMarkup = &keyboard
		if _, err := bot.Send(editMsg); err != nil {
			log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
	log.Printf("PROCESS_PAYMENT_CALLBACK: –ü–æ–∫–∞–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã –¥–ª—è TelegramID=%d", user.TelegramID)
	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...")
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂
	log.Printf("PROCESS_PAYMENT_CALLBACK: –í—ã–∑–æ–≤ ProcessPayment –¥–ª—è TelegramID=%d, days=%d", user.TelegramID, days)
	configURL, err := common.ProcessPayment(user, days)
	if err != nil {
		log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", fmt.Sprintf("pay:%d", days)),
				tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
			),
		)

		text := fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞: %v", err)
		log.Printf("PROCESS_PAYMENT_CALLBACK: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è TelegramID=%d: %s", user.TelegramID, text)
		editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
		editMsg.ReplyMarkup = &keyboard
		if _, err := bot.Send(editMsg); err != nil {
			log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}

	// –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞
	log.Printf("PROCESS_PAYMENT_CALLBACK: –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–µ–Ω –¥–ª—è TelegramID=%d, ConfigURL=%s", user.TelegramID, configURL)

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
	redirectURL := common.GetRedirectURL() + configURL

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonURL(fmt.Sprintf("üì± –ü–æ–¥–∫–ª—é—á–∏—Ç—å (%s)", common.GetAppName()), redirectURL)),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
		),
	)

	expiryDate := common.FormatRussianDateFromUnix(user.ExpiryTime)

	var actionText string
	if common.IsConfigActive(user) && user.ConfigsCount > 1 {
		actionText = "–ø—Ä–æ–¥–ª–µ–Ω"
	} else {
		actionText = "—Å–æ–∑–¥–∞–Ω"
	}

	text := fmt.Sprintf("‚úÖ VPN –∫–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ %s!\n\n"+
		"üìÖ –ü–µ—Ä–∏–æ–¥: %d %s\n"+
		"üí∞ –°–ø–∏—Å–∞–Ω–æ: %.0f‚ÇΩ\n"+
		"üí≥ –û—Å—Ç–∞—Ç–æ–∫: %.2f‚ÇΩ\n"+
		"‚è∞ –ê–∫—Ç–∏–≤–µ–Ω –¥–æ: %s\n\n"+
		"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:\n`%s`\n\n"+
		"üí° –ù–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å (%s)' –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞",
		actionText, days, common.GetDaysWord(days), cost, user.Balance, expiryDate, configURL, common.GetAppName())

	log.Printf("PROCESS_PAYMENT_CALLBACK: –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è TelegramID=%d: %s", user.TelegramID, text)
	editMsg = tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ParseMode = "Markdown"
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("PROCESS_PAYMENT_CALLBACK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
	}
}

// ProcessTopup –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É
func ProcessTopup(bot *tgbotapi.BotAPI, chatID int64, messageID int, user *common.User, amount int) {
	log.Printf("PROCESS_TOPUP: –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è TelegramID=%d, amount=%d", user.TelegramID, amount)

	// –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	deleteMsg := tgbotapi.NewDeleteMessage(chatID, messageID)
	if _, err := bot.Send(deleteMsg); err != nil {
		log.Printf("PROCESS_TOPUP: –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
	if payments.GlobalPaymentManager == nil {
		log.Printf("PROCESS_TOPUP: –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", fmt.Sprintf("topup:%d", amount)),
				tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
			),
		)

		text := "‚ùå –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
		msg := tgbotapi.NewMessage(chatID, text)
		msg.ReplyMarkup = &keyboard
		if _, err := bot.Send(msg); err != nil {
			log.Printf("PROCESS_TOPUP: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –ø–ª–∞—Ç–µ–∂–∏
	if !payments.GlobalPaymentManager.IsAnyProviderEnabled() {
		log.Printf("PROCESS_TOPUP: –í—Å–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã")

		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
			),
		)

		text := "‚ùå –ü–ª–∞—Ç–µ–∂–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
		msg := tgbotapi.NewMessage(chatID, text)
		msg.ReplyMarkup = &keyboard
		if _, err := bot.Send(msg); err != nil {
			log.Printf("PROCESS_TOPUP: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É
	err := payments.GlobalPaymentManager.ProcessTopupRequest(user.TelegramID, float64(amount), chatID)
	if err != nil {
		log.Printf("PROCESS_TOPUP: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)

		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", fmt.Sprintf("topup:%d", amount)),
				tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–∞—è", "main"),
			),
		)

		text := fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: %v\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.", err)
		msg := tgbotapi.NewMessage(chatID, text)
		msg.ReplyMarkup = &keyboard
		if _, err := bot.Send(msg); err != nil {
			log.Printf("PROCESS_TOPUP: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
		}
		return
	}

	log.Printf("PROCESS_TOPUP: –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –¥–ª—è TelegramID=%d, amount=%d", user.TelegramID, amount)
}
