package common

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// ShowTrafficConfig –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
func ShowTrafficConfig(bot *tgbotapi.BotAPI, chatID int64) {
	log.Printf("SHOW_TRAFFIC_CONFIG: –ü–æ–∫–∞–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è ChatID=%d", chatID)

	var trafficLimitText string
	if TRAFFIC_LIMIT_GB <= 0 {
		trafficLimitText = "‚ùå –û—Ç–∫–ª—é—á–µ–Ω (–±–µ–∑–ª–∏–º–∏—Ç)"
	} else {
		trafficLimitText = fmt.Sprintf("‚úÖ %d GB", TRAFFIC_LIMIT_GB)
	}

	var resetText string
	if TRAFFIC_RESET_ENABLED && TRAFFIC_RESET_INTERVAL > 0 {
		resetText = fmt.Sprintf("‚úÖ %d –º–∏–Ω—É—Ç", TRAFFIC_RESET_INTERVAL)
	} else {
		resetText = "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"
	}

	text := fmt.Sprintf("üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\n\n"+
		"üîç –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: %d –º–∏–Ω—É—Ç\n"+
		"üìà –õ–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞: %s\n"+
		"üîÑ –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–±—Ä–æ—Å–∞: %s\n\n"+
		"üí° –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥–∏ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ –∏ –≤–∫–ª—é—á–∞–µ—Ç –∏—Ö –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ç—Ä–∞—Ñ–∏–∫–∞.",
		TRAFFIC_CHECK_INTERVAL, trafficLimitText, resetText)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å", "check_traffic_now"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "main"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = &keyboard
	if _, err := bot.Send(msg); err != nil {
		log.Printf("SHOW_TRAFFIC_CONFIG: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// CheckTrafficNow –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä–∞—Ñ–∏–∫–∞
func CheckTrafficNow(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	log.Printf("CHECK_TRAFFIC_NOW: –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è ChatID=%d", chatID)

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞...")
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("CHECK_TRAFFIC_NOW: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ: %v", err)
	}

	// –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç—Ä–∞—Ñ–∏–∫–∞
	if err := CheckAndDisableTrafficLimit(); err != nil {
		log.Printf("CHECK_TRAFFIC_NOW: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞: %v", err)

		keyboard := tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", "check_traffic_now"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "traffic_config"),
			),
		)

		text := fmt.Sprintf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞:\n%v", err)
		editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
		editMsg.ReplyMarkup = &keyboard
		if _, err := bot.Send(editMsg); err != nil {
			log.Printf("CHECK_TRAFFIC_NOW: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: %v", err)
		}
		return
	}

	// –£—Å–ø–µ—à–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞", "check_traffic_now"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "traffic_config"),
		),
	)

	text := "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n" +
		"üìä –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –Ω–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞.\n" +
		"üîç –°–ª–µ–¥—É—é—â–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ " + fmt.Sprintf("%d", TRAFFIC_CHECK_INTERVAL) + " –º–∏–Ω—É—Ç."

	editMsg = tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("CHECK_TRAFFIC_NOW: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ: %v", err)
	}
}

// EditTrafficDaily —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func EditTrafficDaily(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	log.Printf("EDIT_TRAFFIC_DAILY: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –¥–ª—è ChatID=%d", chatID)

	config := GetTrafficConfig()

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("1 –ì–ë", "set_daily:1"),
			tgbotapi.NewInlineKeyboardButtonData("2 –ì–ë", "set_daily:2"),
			tgbotapi.NewInlineKeyboardButtonData("5 –ì–ë", "set_daily:5"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("10 –ì–ë", "set_daily:10"),
			tgbotapi.NewInlineKeyboardButtonData("20 –ì–ë", "set_daily:20"),
			tgbotapi.NewInlineKeyboardButtonData("50 –ì–ë", "set_daily:50"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "traffic_config"),
		),
	)

	text := fmt.Sprintf("üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\n\n"+
		"–¢–µ–∫—É—â–∏–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç: %s\n\n"+
		"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç:",
		FormatTrafficLimit(config.DailyLimitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("EDIT_TRAFFIC_DAILY: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// EditTrafficWeekly —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func EditTrafficWeekly(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	log.Printf("EDIT_TRAFFIC_WEEKLY: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –¥–ª—è ChatID=%d", chatID)

	config := GetTrafficConfig()

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("10 –ì–ë", "set_weekly:10"),
			tgbotapi.NewInlineKeyboardButtonData("20 –ì–ë", "set_weekly:20"),
			tgbotapi.NewInlineKeyboardButtonData("50 –ì–ë", "set_weekly:50"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("100 –ì–ë", "set_weekly:100"),
			tgbotapi.NewInlineKeyboardButtonData("200 –ì–ë", "set_weekly:200"),
			tgbotapi.NewInlineKeyboardButtonData("500 –ì–ë", "set_weekly:500"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "traffic_config"),
		),
	)

	text := fmt.Sprintf("üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\n\n"+
		"–¢–µ–∫—É—â–∏–π –Ω–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç: %s\n\n"+
		"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç:",
		FormatTrafficLimit(config.WeeklyLimitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("EDIT_TRAFFIC_WEEKLY: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// EditTrafficMonthly —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –º–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func EditTrafficMonthly(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	log.Printf("EDIT_TRAFFIC_MONTHLY: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ –¥–ª—è ChatID=%d", chatID)

	config := GetTrafficConfig()

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("50 –ì–ë", "set_monthly:50"),
			tgbotapi.NewInlineKeyboardButtonData("100 –ì–ë", "set_monthly:100"),
			tgbotapi.NewInlineKeyboardButtonData("200 –ì–ë", "set_monthly:200"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("300 –ì–ë", "set_monthly:300"),
			tgbotapi.NewInlineKeyboardButtonData("500 –ì–ë", "set_monthly:500"),
			tgbotapi.NewInlineKeyboardButtonData("1 –¢–ë", "set_monthly:1024"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥", "traffic_config"),
		),
	)

	text := fmt.Sprintf("üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ —Ç—Ä–∞—Ñ–∏–∫–∞\n\n"+
		"–¢–µ–∫—É—â–∏–π –º–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç: %s\n\n"+
		"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç:",
		FormatTrafficLimit(config.MonthlyLimitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("EDIT_TRAFFIC_MONTHLY: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// SetDailyTrafficLimit —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func SetDailyTrafficLimit(bot *tgbotapi.BotAPI, chatID int64, messageID int, limitGB int) {
	log.Printf("SET_DAILY_TRAFFIC_LIMIT: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–Ω–µ–≤–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ %d GB –¥–ª—è ChatID=%d", limitGB, chatID)

	config := GetTrafficConfig()
	config.DailyLimitGB = limitGB
	config.WeeklyLimitGB = 0
	config.MonthlyLimitGB = 0
	config.LimitGB = 0
	config.Enabled = true
	config.ResetDays = 1

	SetTrafficConfig(config)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "traffic_config"),
		),
	)

	text := fmt.Sprintf("‚úÖ –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n"+
		"üìä –ù–æ–≤—ã–π –ª–∏–º–∏—Ç: %s –≤ –¥–µ–Ω—å\n"+
		"üîÑ –°–±—Ä–æ—Å: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n\n"+
		"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫–æ –≤—Å–µ–º –Ω–æ–≤—ã–º –ø–æ–¥–ø–∏—Å–∫–∞–º.",
		FormatTrafficLimit(limitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("SET_DAILY_TRAFFIC_LIMIT: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// SetWeeklyTrafficLimit —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func SetWeeklyTrafficLimit(bot *tgbotapi.BotAPI, chatID int64, messageID int, limitGB int) {
	log.Printf("SET_WEEKLY_TRAFFIC_LIMIT: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ %d GB –¥–ª—è ChatID=%d", limitGB, chatID)

	config := GetTrafficConfig()
	config.DailyLimitGB = 0
	config.WeeklyLimitGB = limitGB
	config.MonthlyLimitGB = 0
	config.LimitGB = 0
	config.Enabled = true
	config.ResetDays = 7

	SetTrafficConfig(config)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "traffic_config"),
		),
	)

	text := fmt.Sprintf("‚úÖ –ù–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n"+
		"üìä –ù–æ–≤—ã–π –ª–∏–º–∏—Ç: %s –≤ –Ω–µ–¥–µ–ª—é\n"+
		"üîÑ –°–±—Ä–æ—Å: –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é\n\n"+
		"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫–æ –≤—Å–µ–º –Ω–æ–≤—ã–º –ø–æ–¥–ø–∏—Å–∫–∞–º.",
		FormatTrafficLimit(limitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("SET_WEEKLY_TRAFFIC_LIMIT: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// SetMonthlyTrafficLimit —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞
func SetMonthlyTrafficLimit(bot *tgbotapi.BotAPI, chatID int64, messageID int, limitGB int) {
	log.Printf("SET_MONTHLY_TRAFFIC_LIMIT: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ %d GB –¥–ª—è ChatID=%d", limitGB, chatID)

	config := GetTrafficConfig()
	config.DailyLimitGB = 0
	config.WeeklyLimitGB = 0
	config.MonthlyLimitGB = limitGB
	config.LimitGB = 0
	config.Enabled = true
	config.ResetDays = 30

	SetTrafficConfig(config)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "traffic_config"),
		),
	)

	text := fmt.Sprintf("‚úÖ –ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç —Ç—Ä–∞—Ñ–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n"+
		"üìä –ù–æ–≤—ã–π –ª–∏–º–∏—Ç: %s –≤ –º–µ—Å—è—Ü\n"+
		"üîÑ –°–±—Ä–æ—Å: –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü\n\n"+
		"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫–æ –≤—Å–µ–º –Ω–æ–≤—ã–º –ø–æ–¥–ø–∏—Å–∫–∞–º.",
		FormatTrafficLimit(limitGB))

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("SET_MONTHLY_TRAFFIC_LIMIT: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}

// DisableTrafficLimit –æ—Ç–∫–ª—é—á–∞–µ—Ç –ª–∏–º–∏—Ç—ã —Ç—Ä–∞—Ñ–∏–∫–∞
func DisableTrafficLimit(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	log.Printf("DISABLE_TRAFFIC_LIMIT: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è ChatID=%d", chatID)

	config := GetTrafficConfig()
	config.Enabled = false
	config.DailyLimitGB = 0
	config.WeeklyLimitGB = 0
	config.MonthlyLimitGB = 0
	config.LimitGB = 0
	config.ResetDays = 0

	SetTrafficConfig(config)

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "traffic_config"),
		),
	)

	text := "‚ùå –õ–∏–º–∏—Ç—ã —Ç—Ä–∞—Ñ–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω—ã!\n\n" +
		"üìä –ù–æ–≤—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –±—É–¥—É—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ç—Ä–∞—Ñ–∏–∫–∞.\n\n" +
		"‚ö†Ô∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç —Å–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã."

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("DISABLE_TRAFFIC_LIMIT: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
	}
}
