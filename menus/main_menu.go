package menus

import (
	"fmt"
	"log"
	"time"

	"bot/common"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// SendMainMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func SendMainMenu(bot *tgbotapi.BotAPI, chatID int64, user *common.User) {
	log.Printf("SEND_MAIN_MENU: –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è TelegramID=%d", user.TelegramID)

	var keyboard tgbotapi.InlineKeyboardMarkup

	if common.IsConfigActive(user) {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
		subscriptionURL := common.CONFIG_BASE_URL + user.SubID
		redirectURL := common.GetRedirectURL() + subscriptionURL

		keyboard = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL("üì± –ü–æ–¥–∫–ª—é—á–∏—Ç—å (Happ)", redirectURL)),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
			),
		)
	} else {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
		if common.TrialManager.CanUseTrial(user) {
			keyboard = tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥", "activate_trial"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
				),
			)
		} else {
			keyboard = tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
				),
			)
		}
	}

	text := fmt.Sprintf("üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!\n\n", user.FirstName)

	text += fmt.Sprintf("üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: %.2f‚ÇΩ\n", user.Balance)

	if common.IsConfigActive(user) {
		expiryDate := time.UnixMilli(user.ExpiryTime).Format("2006-01-02")
		text += fmt.Sprintf("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ %s\n\n", expiryDate)
		text += "üöÄ –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫–æ–Ω—Ñ–∏–≥ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 2 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞:\n\n"
		text += "1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
		text += "2Ô∏è‚É£ –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å (Happ)' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
	} else {
		if common.TrialManager.CanUseTrial(user) {
			text += "üéÅ –£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n"
			text += fmt.Sprintf("–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: %d –¥–Ω–µ–π\n", common.TRIAL_PERIOD_DAYS)
			text += "‚ú® –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥."
		} else {
			text += "üîê –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω–∏–≥–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n"
			text += "üí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º!"
		}
	}

	log.Printf("SEND_MAIN_MENU: –¢–µ–∫—Å—Ç –º–µ–Ω—é –¥–ª—è TelegramID=%d: %s", user.TelegramID, text)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = &keyboard
	if _, err := bot.Send(msg); err != nil {
		log.Printf("SEND_MAIN_MENU: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è TelegramID=%d: %v", user.TelegramID, err)
	}
}

// EditMainMenu —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func EditMainMenu(bot *tgbotapi.BotAPI, chatID int64, messageID int, user *common.User) {
	log.Printf("EDIT_MAIN_MENU: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è TelegramID=%d, MessageID=%d", user.TelegramID, messageID)

	var keyboard tgbotapi.InlineKeyboardMarkup

	if common.IsConfigActive(user) {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
		subscriptionURL := common.CONFIG_BASE_URL + user.SubID
		redirectURL := common.GetRedirectURL() + subscriptionURL

		keyboard = tgbotapi.NewInlineKeyboardMarkup(
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL("üì± –ü–æ–¥–∫–ª—é—á–∏—Ç—å (Happ)", redirectURL)),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
			),
		)
	} else {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
		if common.TrialManager.CanUseTrial(user) {
			keyboard = tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥", "activate_trial"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
				),
			)
		} else {
			keyboard = tgbotapi.NewInlineKeyboardMarkup(
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üì± –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "download_app"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí≥ –ü—Ä–æ–¥–ª–∏—Ç—å", "extend"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "topup"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonData("üîê –ö–æ–Ω—Ñ–∏–≥", "vpn"),
				),
				tgbotapi.NewInlineKeyboardRow(
					tgbotapi.NewInlineKeyboardButtonURL("‚ùì –ü–æ–¥–¥–µ—Ä–∂–∫–∞", common.SUPPORT_LINK),
				),
			)
		}
	}

	text := fmt.Sprintf("üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!\n\n", user.FirstName)

	text += fmt.Sprintf("üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: %.2f‚ÇΩ\n", user.Balance)

	if common.IsConfigActive(user) {
		expiryDate := time.UnixMilli(user.ExpiryTime).Format("2006-01-02")
		text += fmt.Sprintf("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ %s\n\n", expiryDate)
		text += "üöÄ –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫–æ–Ω—Ñ–∏–≥ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç–∞—Ç—å, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ 2 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞:\n\n"
		text += "1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\n"
		text += "2Ô∏è‚É£ –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å (Happ)' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
	} else {
		if common.TrialManager.CanUseTrial(user) {
			text += "üéÅ –£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n"
			text += fmt.Sprintf("–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: %d –¥–Ω–µ–π\n", common.TRIAL_PERIOD_DAYS)
			text += "‚ú® –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥."
		} else {
			text += "üîê –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n"
			text += "üí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º!"
		}
	}

	log.Printf("EDIT_MAIN_MENU: –¢–µ–∫—Å—Ç –º–µ–Ω—é –¥–ª—è TelegramID=%d: %s", user.TelegramID, text)

	editMsg := tgbotapi.NewEditMessageText(chatID, messageID, text)
	editMsg.ReplyMarkup = &keyboard
	if _, err := bot.Send(editMsg); err != nil {
		log.Printf("EDIT_MAIN_MENU: –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è TelegramID=%d, MessageID=%d: %v", user.TelegramID, messageID, err)
	}
}
